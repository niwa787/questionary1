<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>動態背景效果</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        * {
            font-family: "Lora", serif;
        }
        .background-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: -1;
        }
        .scroll {
            position: absolute;
            white-space: nowrap;
            pointer-events: none;
            animation: scrollLeft 10s linear infinite;
        }
        @keyframes scrollLeft {
            0% {
                transform: translateX(100vw);
            }
            100% {
                transform: translateX(-100vw);
            }
        }
        .content-container {
            position: relative;
            z-index: 1;
            padding: 20px;
        }
    </style>
</head>
<body>
<div class="background-container" id="backgroundContainer">
    <!-- 動態文字元素將在這裡顯示 -->
</div>

<div class="content-container">
    <div class="container">
        <h2 class="text-center mb-4">主要內容</h2>
        <p>這裡是主要內容。動態背景效果應該顯示在這段內容的後面。</p>
        <a class="btn btn-secondary mt-3" href="/">返回首頁</a>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const titles = ['文字1', '文字2', '文字3', '文字4', '文字5']; // 這是示例數據，可以從 Thymeleaf 獲取

        const backgroundContainer = document.getElementById('backgroundContainer');

        titles.forEach(title => {
            setTimeout(() => {
                // 創建滾動元素
                const scrollElement = document.createElement('div');
                scrollElement.className = 'scroll';
                scrollElement.textContent = title;

                // 隨機上下位置和字體大小
                scrollElement.style.top = `${Math.random() * 100}vh`;
                scrollElement.style.fontSize = `${Math.random() * 10 + 10}px`; // 字體大小

                backgroundContainer.appendChild(scrollElement);
            }, Math.random() * 5000); // 隨機延遲時間
        });
    });
</script>
</body>
</html>
